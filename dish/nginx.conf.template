events {}
http {
    proxy_cache_path SITE_PATH/cache/cache levels=1:2 keys_zone=mycache:32m max_size=1g;
    proxy_temp_path SITE_PATH/cache/temp;
    proxy_cache_methods GET;
    proxy_cache_valid any 1h;
    proxy_cache mycache;
    add_header X-Proxy-Cache $upstream_cache_status;

    map $request_method $upstream_location {
        GET backend_balanced;
        default backend;
    }
    upstream backend {
        server 127.0.0.1:8000;
    }
    upstream backend_balanced {
        server 127.0.0.1:8000 weight=2;
        server 127.0.0.1:8001 weight=1;
        server 127.0.0.1:8002 weight=1;
    }
    include NGINX_PATH/mime.types;
    server {
        gzip on;
        listen 80;
        access_log SITE_PATH/logs/access.log;
        error_log SITE_PATH/logs/error.log;
        client_max_body_size 10M;
        proxy_set_header Host $host;
        more_set_headers "Server: Dish";


        location /api/v1/ {
            proxy_pass http://$upstream_location$uri$is_args$args;         # <- let nginx pass traffic to the gunicorn server
            proxy_no_cache 1;
        }

        location /api/v1/api-auth/logout/ {
            proxy_pass http://backend/api/v1/api-auth/logout/;
        }

        location /admin/ {
            proxy_pass http://backend/admin/;
        }

        location /legacy/ {
            proxy_pass http://backend/legacy/;
        }

        location / {
            root SITE_PATH/dish/static;
        }

        location /test/ {
            return 301 /;
        }

        location /status/ {
            stub_status;
        }

    }
}
